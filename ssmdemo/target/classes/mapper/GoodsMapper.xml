<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.octopus.dao.GoodsDao">

	<select id="get" resultType="com.octopus.entity.GoodsDO">
		select `id`,`name`,`price`,`count`,`type`,`up_time`,`state`,`source_channel`,`in_price`,`promtion_price`,`type_id` from goods where id = #{value}
	</select>

	<select id="list" resultType="com.octopus.entity.GoodsDO">
		select `id`,`name`,`price`,`count`,`type`,`up_time`,`state`,`source_channel`,`in_price`,`promtion_price`,`type_id` from goods
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="price != null and price != ''"> and price = #{price} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="upTime != null and upTime != ''"> and up_time = #{upTime} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		  <if test="sourceChannel != null and sourceChannel != ''"> and source_channel = #{sourceChannel} </if>
		  		  <if test="inPrice != null and inPrice != ''"> and in_price = #{inPrice} </if>
		  		  <if test="promtionPrice != null and promtionPrice != ''"> and promtion_price = #{promtionPrice} </if>
		  		  <if test="typeId != null and typeId != ''"> and type_id = #{typeId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from goods
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="price != null and price != ''"> and price = #{price} </if>
		  		  <if test="count != null and count != ''"> and count = #{count} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="upTime != null and upTime != ''"> and up_time = #{upTime} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		  <if test="sourceChannel != null and sourceChannel != ''"> and source_channel = #{sourceChannel} </if>
		  		  <if test="inPrice != null and inPrice != ''"> and in_price = #{inPrice} </if>
		  		  <if test="promtionPrice != null and promtionPrice != ''"> and promtion_price = #{promtionPrice} </if>
		  		  <if test="typeId != null and typeId != ''"> and type_id = #{typeId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.octopus.entity.GoodsDO" useGeneratedKeys="true" keyProperty="id">
		insert into goods
		(
			`name`, 
			`price`, 
			`count`, 
			`type`, 
			`up_time`, 
			`state`, 
			`source_channel`, 
			`in_price`, 
			`promtion_price`, 
			`type_id`
		)
		values
		(
			#{name}, 
			#{price}, 
			#{count}, 
			#{type}, 
			#{upTime}, 
			#{state}, 
			#{sourceChannel}, 
			#{inPrice}, 
			#{promtionPrice}, 
			#{typeId}
		)
	</insert>
	 
	<update id="update" parameterType="com.octopus.entity.GoodsDO">
		update goods 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="price != null">`price` = #{price}, </if>
			<if test="count != null">`count` = #{count}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="upTime != null">`up_time` = #{upTime}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="sourceChannel != null">`source_channel` = #{sourceChannel}, </if>
			<if test="inPrice != null">`in_price` = #{inPrice}, </if>
			<if test="promtionPrice != null">`promtion_price` = #{promtionPrice}, </if>
			<if test="typeId != null">`type_id` = #{typeId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from goods where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from goods where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>