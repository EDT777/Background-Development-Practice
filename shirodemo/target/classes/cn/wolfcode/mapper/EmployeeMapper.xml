<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.mapper.EmployeeMapper">

  <resultMap id="BaseResultMap" type="cn.wolfcode.domain.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <result column="deptId" property="dept.id" />
    <result column="d_id" property="dept.id" />
    <result column="d_name" property="dept.name" />
    <result column="d_sn" property="dept.sn" />
  </resultMap>
  <resultMap id="AllResultMap" type="cn.wolfcode.domain.Employee" extends="BaseResultMap">
    <collection property="roles" select="cn.wolfcode.mapper.RoleMapper.selectByEmpId" column="id"></collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteRelation">
    delete from employee_role where employee_id = #{employeeId}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="cn.wolfcode.domain.Employee" useGeneratedKeys="true">
    insert into employee (name,username, password, email,
      age, admin, deptId)
    values (#{name,jdbcType=VARCHAR},#{username}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{admin,jdbcType=BIT}, #{dept.id,jdbcType=BIGINT})
  </insert>
  <insert id="insertRelation">
    insert into employee_role(employee_id,role_id) VALUES (#{employeeId},#{roleId})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.domain.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      admin = #{admin,jdbcType=BIT},
      deptId = #{dept.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="AllResultMap">
    select id, name,username, password, email, age, admin, deptId
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name,username, password, email, age, admin, deptId
    from employee
  </select>

  <sql id="where_sql">
    <where>
      <if test="keyword != null and keyword !=''">
        and (e.name like concat('%', #{keyword} ,'%') or e.email like concat('%', #{keyword} ,'%'))
      </if>
      <if test="deptId != null">
        and e.deptId = #{deptId}
      </if>
    </where>
  </sql>

  <select id="selectForList" resultMap="BaseResultMap">
    select e.id, e.name,e.username, e.password, e.email, e.age, e.admin, e.deptId, d.id AS d_id, d.name AS d_name, d.sn AS d_sn
    from employee e left JOIN department d on e.deptId = d.id
    <include refid="where_sql" />
  </select>
    <select id="selectByUsernameAndPassword" resultType="cn.wolfcode.domain.Employee">
      select id, name,username, password, email, age, admin, deptId
      from employee where username = #{username} and password = #{password}
    </select>
    <select id="selectByUsername" resultType="cn.wolfcode.domain.Employee">
      select id, name,username, password, email, age, admin, deptId
      from employee where username = #{username}
    </select>


</mapper>